name: Deploy Model
inputs:
- {name: train}
outputs:
- {name: output_text, type: String}
implementation:
  container:
    image: python:3.7
    command:
    - sh
    - -c
    - (PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet --no-warn-script-location
      'minio==7.1.10' 'tensorflow==2.2.3' 'protobuf==3.20.0' || PIP_DISABLE_PIP_VERSION_CHECK=1
      python3 -m pip install --quiet --no-warn-script-location 'minio==7.1.10' 'tensorflow==2.2.3'
      'protobuf==3.20.0' --user) && "$0" "$@"
    - sh
    - -ec
    - |
      program_path=$(mktemp)
      printf "%s" "$0" > "$program_path"
      python3 -u "$program_path" "$@"
    - |
      def _make_parent_dirs_and_return_path(file_path: str):
          import os
          os.makedirs(os.path.dirname(file_path), exist_ok=True)
          return file_path

      def serve(train_path,
                output_text_path):
          print("Do Serving")
          with open(output_text_path, 'w') as writer:
              writer.write("done training!")

      import argparse
      _parser = argparse.ArgumentParser(prog='Deploy Model', description='')
      _parser.add_argument("--train", dest="train_path", type=str, required=True, default=argparse.SUPPRESS)
      _parser.add_argument("--output-text", dest="output_text_path", type=_make_parent_dirs_and_return_path, required=True, default=argparse.SUPPRESS)
      _parsed_args = vars(_parser.parse_args())

      _outputs = serve(**_parsed_args)
    args:
    - --train
    - {inputPath: train}
    - --output-text
    - {outputPath: output_text}
